//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PictionaryClient.PictionaryServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PictionaryServiceRef.IUser", CallbackContract=typeof(PictionaryClient.PictionaryServiceRef.IUserCallback))]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Join", ReplyAction="http://tempuri.org/IUser/JoinResponse")]
        bool Join(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Join", ReplyAction="http://tempuri.org/IUser/JoinResponse")]
        System.Threading.Tasks.Task<bool> JoinAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/Leave")]
        void Leave(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/Leave")]
        System.Threading.Tasks.Task LeaveAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/PostLine")]
        void PostLine(string jsonLine);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/PostLine")]
        System.Threading.Tasks.Task PostLineAsync(string jsonLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetLine", ReplyAction="http://tempuri.org/IUser/GetLineResponse")]
        string GetLine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetLine", ReplyAction="http://tempuri.org/IUser/GetLineResponse")]
        System.Threading.Tasks.Task<string> GetLineAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/CheckWord")]
        void CheckWord(string word, string userName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/CheckWord")]
        System.Threading.Tasks.Task CheckWordAsync(string word, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetWordHint", ReplyAction="http://tempuri.org/IUser/GetWordHintResponse")]
        string GetWordHint();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetWordHint", ReplyAction="http://tempuri.org/IUser/GetWordHintResponse")]
        System.Threading.Tasks.Task<string> GetWordHintAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/SendLine")]
        void SendLine(string jsonLine);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IUser/FinishCurrentGame")]
        void FinishCurrentGame(bool status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : PictionaryClient.PictionaryServiceRef.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.DuplexClientBase<PictionaryClient.PictionaryServiceRef.IUser>, PictionaryClient.PictionaryServiceRef.IUser {
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Join(string name) {
            return base.Channel.Join(name);
        }
        
        public System.Threading.Tasks.Task<bool> JoinAsync(string name) {
            return base.Channel.JoinAsync(name);
        }
        
        public void Leave(string name) {
            base.Channel.Leave(name);
        }
        
        public System.Threading.Tasks.Task LeaveAsync(string name) {
            return base.Channel.LeaveAsync(name);
        }
        
        public void PostLine(string jsonLine) {
            base.Channel.PostLine(jsonLine);
        }
        
        public System.Threading.Tasks.Task PostLineAsync(string jsonLine) {
            return base.Channel.PostLineAsync(jsonLine);
        }
        
        public string GetLine() {
            return base.Channel.GetLine();
        }
        
        public System.Threading.Tasks.Task<string> GetLineAsync() {
            return base.Channel.GetLineAsync();
        }
        
        public void CheckWord(string word, string userName) {
            base.Channel.CheckWord(word, userName);
        }
        
        public System.Threading.Tasks.Task CheckWordAsync(string word, string userName) {
            return base.Channel.CheckWordAsync(word, userName);
        }
        
        public string GetWordHint() {
            return base.Channel.GetWordHint();
        }
        
        public System.Threading.Tasks.Task<string> GetWordHintAsync() {
            return base.Channel.GetWordHintAsync();
        }
    }
}
